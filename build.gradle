plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version "1.6.10"  // kotlin_version
    id "org.jetbrains.kotlin.kapt" version "1.6.10" // kotlin_version
}

group "edu.tpu.ruban"
version "0.0.1"
mainClassName = "edu.tpu.ruban.ApplicationKt"

repositories {
    mavenCentral()
    google()
    gradlePluginPortal()
    maven { url "https://jitpack.io" }
//    maven {
//        url 'https://kotlin.bintray.com/ktor'
////        url "https://kotlin.bintray.com/kotlinx"
//    }
}


// Versions
def ktor_version                    = "1.6.7"
def kotlin_version                  = "1.6.10"
def logback_version                 = "1.2.3"
def daggerVersion                   = "2.40"
def koin_version                    = "3.1.4"
def exposed_version                 = "0.29.1"
def hikari_version                  = "4.0.3"
def postgres_version                = "42.2.18"
def object_pool_version             = "2.11.1"
def apache_collections_versions     = "4.4"
def encryptor_version               = "0.4"
// END Versions

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-freemarker:$ktor_version"
    implementation "io.ktor:ktor-server-sessions:$ktor_version"
    implementation "io.ktor:ktor-gson:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-auth-jwt:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"

    // postgresql, hikari
    implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-dao:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-java-time:$exposed_version"
    implementation "org.postgresql:postgresql:$postgres_version"
    implementation "com.zaxxer:HikariCP:$hikari_version"

    // sql query build (не использовать, т.к. нельзя делать схемы
//    implementation 'com.github.squigglesql:squigglesql:4.1.0'
//    implementation 'com.github.jOOQ:jOOQ:version-3.16.0'

    // encryption
    implementation "org.mindrot:jbcrypt:$encryptor_version"

    // di
//    implementation "io.insert-koin:koin-core:$koin_version"
//    implementation "io.insert-koin:koin-ktor:$koin_version"
//    testImplementation "io.insert-koin:koin-test:$koin_version"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // linkedmap
    implementation "org.apache.commons:commons-collections4:$apache_collections_versions"

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}